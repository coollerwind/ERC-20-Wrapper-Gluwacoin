{
  "manifestVersion": "3.1",
  "impls": {
    "a65cdfa308566facef6065beb9e631bc7782c0699e2093fd7f5bc24c50583bce": {
      "address": "0xA57B8a5584442B467b4689F1144D269d096A3daF",
      "txHash": "0xc19387bfc9ac46d3804f7761c24e2f38f36b16fe91b82b07514218c851a7990d",
      "layout": {
        "storage": [
          {
            "contract": "Box",
            "label": "value",
            "type": "t_uint256",
            "src": "Box.sol:6"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "a927d5ee83af7f80649e185d0612523ebd19a107830c557d448fd87d85ad723f": {
      "address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601",
      "txHash": "0x527f9bea2161c510833624eeede7027a1991c2bb59065379b19e2f7c11cb0b4a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1653_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:17"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:85"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)423_storage))",
            "src": "abstracts/ERC20Reservable.sol:36"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:39"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:167"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)2874",
            "src": "abstracts/ERC20Wrapper.sol:20"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:22"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:183"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ERC20PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Pausable.sol:39"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "Box.sol:21"
          },
          {
            "contract": "ExampleCoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ExampleCoin.sol:28"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IERC20)2874": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)423_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1653_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x254dffcd3277C0b1660F6d42EFbB754edaBAbC2B",
    "txHash": "0x5346ce7f409dbcf6aabacd760a068581a6e1e3a05a7cdc78876fd261df45b3a5"
  }
}
