{
  "contracts": {
    "ControlledGluwacoin": {
      "address": "0xD4B05F01F28fF5F17E1AD6AF23F9882F83f8924f",
      "constructorCode": "608060405234801561001057600080fd5b5061494e806100206000396000f3fe",
      "bodyBytecodeHash": "5026dbc14ca9052a42b02207975ada76e895956436b20d0e15b9030362f13247",
      "localBytecodeHash": "e79c497ad378d5be829bb3e1b7c9e483d7d6a08a00ba6a544df50a65833346cb",
      "deployedBytecodeHash": "e79c497ad378d5be829bb3e1b7c9e483d7d6a08a00ba6a544df50a65833346cb",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_struct<AccessControlUpgradeSafe.RoleData>": {
          "id": "t_struct<AccessControlUpgradeSafe.RoleData>",
          "kind": "struct",
          "label": "AccessControlUpgradeSafe.RoleData",
          "members": [
            {
              "label": "members",
              "astId": 156,
              "type": "t_struct<EnumerableSet.AddressSet>",
              "src": "1655:32:2"
            },
            {
              "label": "adminRole",
              "astId": 158,
              "type": "t_bytes32",
              "src": "1697:17:2"
            }
          ]
        },
        "t_struct<EnumerableSet.AddressSet>": {
          "id": "t_struct<EnumerableSet.AddressSet>",
          "kind": "struct",
          "label": "EnumerableSet.AddressSet",
          "members": [
            {
              "label": "_inner",
              "astId": 1569,
              "type": "t_struct<EnumerableSet.Set>",
              "src": "4644:10:8"
            }
          ]
        },
        "t_struct<EnumerableSet.Set>": {
          "id": "t_struct<EnumerableSet.Set>",
          "kind": "struct",
          "label": "EnumerableSet.Set",
          "members": [
            {
              "label": "_values",
              "astId": 1385,
              "type": "t_array:dyn<t_bytes32>",
              "src": "1213:17:8"
            },
            {
              "label": "_indexes",
              "astId": 1389,
              "type": "t_mapping<t_uint256>",
              "src": "1364:37:8"
            }
          ]
        },
        "t_bytes32": {
          "id": "t_bytes32",
          "kind": "elementary",
          "label": "bytes32"
        },
        "t_array:dyn<t_bytes32>": {
          "id": "t_array:dyn<t_bytes32>",
          "valueType": "t_bytes32",
          "length": "dyn",
          "kind": "array",
          "label": "bytes32[]"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_mapping<t_struct<AccessControlUpgradeSafe.RoleData>>": {
          "id": "t_mapping<t_struct<AccessControlUpgradeSafe.RoleData>>",
          "valueType": "t_struct<AccessControlUpgradeSafe.RoleData>",
          "label": "mapping(key => AccessControlUpgradeSafe.RoleData)",
          "kind": "mapping"
        },
        "t_array:49<t_uint256>": {
          "id": "t_array:49<t_uint256>",
          "valueType": "t_uint256",
          "length": "49",
          "kind": "array",
          "label": "uint256[49]"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_array:44<t_uint256>": {
          "id": "t_array:44<t_uint256>",
          "valueType": "t_uint256",
          "length": "44",
          "kind": "array",
          "label": "uint256[44]"
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_struct<ERC20Reservable.Reservation>": {
          "id": "t_struct<ERC20Reservable.Reservation>",
          "kind": "struct",
          "label": "ERC20Reservable.Reservation",
          "members": [
            {
              "label": "_amount",
              "astId": 2396,
              "type": "t_uint256",
              "src": "908:15:15"
            },
            {
              "label": "_fee",
              "astId": 2398,
              "type": "t_uint256",
              "src": "933:12:15"
            },
            {
              "label": "_recipient",
              "astId": 2400,
              "type": "t_address",
              "src": "955:18:15"
            },
            {
              "label": "_executor",
              "astId": 2402,
              "type": "t_address",
              "src": "983:17:15"
            },
            {
              "label": "_expiryBlockNum",
              "astId": 2404,
              "type": "t_uint256",
              "src": "1010:23:15"
            },
            {
              "label": "_status",
              "astId": 2406,
              "type": "t_enum<ERC20Reservable.ReservationStatus>",
              "src": "1043:25:15"
            }
          ]
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_enum<ERC20Reservable.ReservationStatus>": {
          "id": "t_enum<ERC20Reservable.ReservationStatus>",
          "kind": "enum",
          "label": "ERC20Reservable.ReservationStatus",
          "members": [
            "Active",
            "Reclaimed",
            "Completed"
          ]
        },
        "t_mapping<t_struct<ERC20Reservable.Reservation>>": {
          "id": "t_mapping<t_struct<ERC20Reservable.Reservation>>",
          "valueType": "t_struct<ERC20Reservable.Reservation>",
          "label": "mapping(key => ERC20Reservable.Reservation)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 50,
          "type": "t_bool",
          "src": "757:24:1"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 53,
          "type": "t_bool",
          "src": "876:25:1"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 118,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:1"
        },
        {
          "contract": "ContextUpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol",
          "label": "__gap",
          "astId": 43,
          "type": "t_array:50<t_uint256>",
          "src": "1277:25:0"
        },
        {
          "contract": "AccessControlUpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol",
          "label": "_roles",
          "astId": 163,
          "type": "t_mapping<t_struct<AccessControlUpgradeSafe.RoleData>>",
          "src": "1727:44:2"
        },
        {
          "contract": "AccessControlUpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol",
          "label": "__gap",
          "astId": 408,
          "type": "t_array:49<t_uint256>",
          "src": "6927:25:2"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_balances",
          "astId": 727,
          "type": "t_mapping<t_uint256>",
          "src": "1481:46:5"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_allowances",
          "astId": 733,
          "type": "t_mapping<t_uint256>",
          "src": "1534:69:5"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_totalSupply",
          "astId": 735,
          "type": "t_uint256",
          "src": "1610:28:5"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_name",
          "astId": 737,
          "type": "t_string",
          "src": "1645:20:5"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_symbol",
          "astId": 739,
          "type": "t_string",
          "src": "1671:22:5"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_decimals",
          "astId": 741,
          "type": "t_uint8",
          "src": "1699:23:5"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "__gap",
          "astId": 1236,
          "type": "t_array:44<t_uint256>",
          "src": "11045:25:5"
        },
        {
          "contract": "ERC20ETHless",
          "path": "contracts/abstracts/ERC20ETHlessTransfer.sol",
          "label": "_usedNonces",
          "astId": 2236,
          "type": "t_mapping<t_bool>",
          "src": "628:66:14"
        },
        {
          "contract": "ERC20ETHless",
          "path": "contracts/abstracts/ERC20ETHlessTransfer.sol",
          "label": "__gap",
          "astId": 2375,
          "type": "t_array:50<t_uint256>",
          "src": "2585:25:14"
        },
        {
          "contract": "ERC20Reservable",
          "path": "contracts/abstracts/ERC20Reservable.sol",
          "label": "_reserved",
          "astId": 2413,
          "type": "t_mapping<t_struct<ERC20Reservable.Reservation>>",
          "src": "1161:70:15"
        },
        {
          "contract": "ERC20Reservable",
          "path": "contracts/abstracts/ERC20Reservable.sol",
          "label": "_totalReserved",
          "astId": 2417,
          "type": "t_mapping<t_uint256>",
          "src": "1290:51:15"
        },
        {
          "contract": "ERC20Reservable",
          "path": "contracts/abstracts/ERC20Reservable.sol",
          "label": "__gap",
          "astId": 2884,
          "type": "t_array:50<t_uint256>",
          "src": "5857:25:15"
        },
        {
          "contract": "ERC20Controllable",
          "path": "contracts/abstracts/ERC20Controllable.sol",
          "label": "__gap",
          "astId": 2213,
          "type": "t_array:50<t_uint256>",
          "src": "2119:25:13"
        },
        {
          "contract": "ControlledGluwacoin",
          "path": "contracts/ControlledGluwacoin.sol",
          "label": "__gap",
          "astId": 1875,
          "type": "t_array:50<t_uint256>",
          "src": "1548:25:9"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    }
  },
  "solidityLibs": {},
  "proxies": {
    "Gluwacoin/ControlledGluwacoin": [
      {
        "address": "0xfA1A1BA27af0aF61F0D929ec5d51CC10f5F4886B",
        "version": "1.0.0",
        "implementation": "0xD4B05F01F28fF5F17E1AD6AF23F9882F83f8924f",
        "admin": "0x5B690bfb3D9d3f15A5c02418A2651E734098c848",
        "kind": "Upgradeable"
      }
    ]
  },
  "manifestVersion": "2.2",
  "version": "1.0.0",
  "dependencies": {
    "@openzeppelin/contracts-ethereum-package": {
      "package": "0x2a9e7B63514438906A83a1e320dBBD814D417002",
      "version": "3.0.0"
    }
  },
  "proxyAdmin": {
    "address": "0x5B690bfb3D9d3f15A5c02418A2651E734098c848"
  }
}
