{
  "manifestVersion": "3.1",
  "impls": {
    "013da52c7b82615fb3770c59eb43e5829fc933b84dcbe81d7845ffdd105582ac": {
      "address": "0xD90F8B6bB742D20C184753e4c9622bcC9Ca21132",
      "txHash": "0x7eb81cc38aeaf57ec51759ad052a9a34303473cbdf549d7878cd07f443729471",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1585_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:17"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:85"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)390_storage))",
            "src": "abstracts/ERC20Reservable.sol:36"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:39"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:167"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)3076",
            "src": "abstracts/ERC20Wrapper.sol:20"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:22"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:183"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ERC20PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Pausable.sol:39"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:40"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IERC20)3076": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)390_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1585_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x6EeEa5B4349cd8Ad1E91Aa8cED649EEb33A41907",
    "txHash": "0x1705b93980536e115738a49d27ee0b4cf1fdf3ec500cd7d8cf9aa223ab988575"
  }
}
